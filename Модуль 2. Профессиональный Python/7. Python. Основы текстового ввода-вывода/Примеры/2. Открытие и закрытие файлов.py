"""- открываем файлы
- автоматическое закрытие файла"""

'''Открываем файлы.

В Python файл открывается с помощью функции open, которой нужно передать путь 
до файла и режим. С путём всё понятно. А режим нужен для того, чтобы указать 
то, как мы хотим использовать файл: будем ли мы записывать или читать, 
будем работать с текстом или же с бинарными данными, хотим ли мы очистить 
файл перед записью в него. Пока мы будем работать с файлами в самых простых 
режимах: чтение и запись текста.

Чтобы что-то прочитать из файла, надо бы его создать и что-то в него 
записать. С этого и начнём. Откроем файл на запись:'''

f = open('foo.txt', 'w')
print(f)  # <_io.TextIOWrapper name='foo.txt' mode='w' encoding='UTF-8'>

'''Переменная f теперь ссылается на некий файловый объект. Пусть вас не 
пугает имя типа, пока вы можете обращать внимание только на параметры — name, 
mode и encoding. Имя и режим те, что мы указали при вызове open, а кодировка 
encoding выбрана умолчательная — UTF-8 (практически всегда именно она вам и 
будет нужна).

Итак, файл мы открыли. Закрывается он так:'''

# …
f.close()
print(f.closed)  # True

'''closed здесь — атрибут объекта f. Атрибуты — это такие переменные внутри 
связанного объекта.

--------------------------------------------------------------------------------

Автоматическое закрытие файла.
 
 Вы уже знаете, что Python — язык с автоматическим управлением памятью. Зная 
 это, можно догадаться, что среда исполнения закрывает файл, когда удаляется 
 последняя ссылка на файловый объект. Легко и просто!

В простых скриптах можно не заниматься ручным закрытием файлов. Дело в том, 
что скрипты, как правило, не открывают большое количество файлов одновременно 
и выполняются за достаточно короткое время. Таким образом закрытие файлов по 
завершению выполнения скрипта вполне приемлемо.

А вот в больших программах, которые работают в течение продолжительного 
времени, уже нужно следить за тем, чтобы файлы закрывались вовремя, в идеале 
— сразу после того, как всё нужное было из файла прочитано или записано в 
него.'''
