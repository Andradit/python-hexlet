'''Дана строка в виде случайной последовательности чисел от 0 до 9.
Требуется создать словарь, который в качестве ключей будет принимать данные
числа (т. е. ключи будут типом int), а в качестве значений – количество этих
чисел в имеющейся последовательности. Для построения словаря создайте функцию
count_it(sequence), принимающую строку из цифр. Функция должна возвратить
словарь из 3-х самых часто встречаемых чисел.'''


def count_it(sequence):
    d = {}
    for element in sequence:
        if element in d:
            d[element] = d[element] + 1
        else:
            d[element] = 1
    print(d.items())
    d_sorted = sorted(d.items(), key=lambda i: i[1], reverse=True)
    return dict(d_sorted[:3])


print(count_it('1224155136132'))

# SOLUTION
# def count_it(sequence):
'''При помощи генератора создаем словарь, где ключом выступает уникальный
элемент строки, а значением - его частота (вычисляется методом count())'''
# num_frequency = {int(item): sequence.count(item) for item in sequence}
# print(num_frequency) # {1: 4, 2: 3, 4: 1, 5: 2, 3: 2, 6: 1}

'''Сортируем словарь по значениям в порядке возрастания. Для этого методом
items() формируем пары “(ключ, значение)” в виде кортежей по всем
элементам словаря. Т. к. нужно сортировать по значениям, берем второй
элемент кортежей. В результате получим список из кортежей “(ключ, значение)'''
# sorted_num_frequency = sorted(
#                    num_frequency.items(), key=lambda element: element[1]
#                               )

'''Возвращаем последние 3 элемента списка, т. е. кортежи с самыми большими
значениями второй компоненты, которые преобразовываем в словарь'''
# return dict(sorted_num_frequency[-3:])
