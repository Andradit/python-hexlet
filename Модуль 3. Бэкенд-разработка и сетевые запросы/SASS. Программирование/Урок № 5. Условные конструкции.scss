//Создайте функцию grid-container-width, которая высчитывает ширину в зависимости от того, сколько колонок мы хотим
//использовать.
//
//Вам доступны 2 переменные:
//
//  - $grid-width — ширина одной колонки.
//  - $gutter-width — ширина отступа от колонки.
//
//Функция принимает один аргумент — количество колонок, которые должен занимать элемент. На выходе получаем число с
//единицей измерения.
//
//Если переданное число колонок меньше или равно нулю, то возвращается ширина 1 колонки.
//
//Пример
//
//$grid-width: 45px;
//$gutter-width: 15px;
//
//.container {
//  width: grid-container-width(15);
//}
//
//.container {
//  width: 885px;
//}
//
//$grid-width: 45px;
//$gutter-width: 15px;
//
//.container {
//  width: grid-container-width(-15);
//}
//
//.container {
//  width: 45px;
//}

$grid-width: 45px;
$gutter-width: 15px;

// BEGIN (write your solution here)
@function grid-container-width($column-count) {
  $indented-column: $grid-width + $gutter-width;
  $width: $indented-column * ($column-count - 1) + $grid-width;

  @if $column-count <= 0 {
    @return $grid-width;
  }

  @return $width;
}

// END

//SOLUTION

// BEGIN
//@function grid-container-width($columns-count) {
//  @if $columns-count <= 0 {
//    // если кол-во колонок меньше либо равно нулю, возвращаем ширину в одну колонку.
//    @return $grid-width;
//  }
//
//  // иначе: (складываем ширину колонки и отступа) умножаем на кол-во колонок
//  $overall-width: ($grid-width + $gutter-width) * $columns-count;
//
//  // от получившегося результата отнимаем лишний отступ
//  @return $overall-width - $gutter-width;
//}

// END